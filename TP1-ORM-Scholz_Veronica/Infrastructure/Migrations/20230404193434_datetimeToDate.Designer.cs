// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230404193434_datetimeToDate")]
    partial class datetimeToDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("FormaEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("FormaEntregaId");

                    b.ToTable("Comanda", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ComandaMercaderia", b =>
                {
                    b.Property<int>("ComandaMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComandaMercaderiaId"));

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("ComandaMercaderiaId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("MercaderiaId");

                    b.ToTable("ComandaMercaderia", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.FormaEntrega", b =>
                {
                    b.Property<int>("FormaEntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaEntregaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FormaEntregaId");

                    b.ToTable("FormaEntrega", (string)null);

                    b.HasData(
                        new
                        {
                            FormaEntregaId = 1,
                            Descripcion = "Salon"
                        },
                        new
                        {
                            FormaEntregaId = 2,
                            Descripcion = "Delivery"
                        },
                        new
                        {
                            FormaEntregaId = 3,
                            Descripcion = "Pedidos Ya"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Mercaderia", b =>
                {
                    b.Property<int>("MercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MercaderiaId"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("MercaderiaId");

                    b.HasIndex("TipoMercaderiaId");

                    b.ToTable("Mercaderia", (string)null);

                    b.HasData(
                        new
                        {
                            MercaderiaId = 1,
                            Imagen = "url",
                            Ingredientes = "Berenjenas en Escabeche (ingredientes)",
                            Nombre = "Berenjenas en Escabeche",
                            Precio = 100,
                            Preparacion = "Berenjenas en Escabeche (preparacion)",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 2,
                            Imagen = "url",
                            Ingredientes = "Porotos en Escabeche (ingredientes)",
                            Nombre = "Porotos en Escabeche",
                            Precio = 100,
                            Preparacion = "Porotos en Escabeche (preparacion)",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 3,
                            Imagen = "url",
                            Ingredientes = "Humus de Garbanzo (ingredientes)",
                            Nombre = "Humus de Garbanzo",
                            Precio = 100,
                            Preparacion = "Humus de Garbanzo (preparacion)",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 4,
                            Imagen = "url",
                            Ingredientes = "Milanesa Napolitana (ingredientes)",
                            Nombre = "Milanesa Napolitana",
                            Precio = 100,
                            Preparacion = "Milanesa Napolitana (preparacion)",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 5,
                            Imagen = "url",
                            Ingredientes = "Papas Fritas (ingredientes)",
                            Nombre = "Papas Fritas",
                            Precio = 100,
                            Preparacion = "Papas Fritas (preparacion)",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 6,
                            Imagen = "url",
                            Ingredientes = "Empanada (ingredientes)",
                            Nombre = "Empanada",
                            Precio = 100,
                            Preparacion = "Empanada (preparacion)",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 7,
                            Imagen = "url",
                            Ingredientes = "Omelette (ingredientes)",
                            Nombre = "Omelette",
                            Precio = 100,
                            Preparacion = "Omelette (preparacion)",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 8,
                            Imagen = "url",
                            Ingredientes = "Tarta (ingredientes)",
                            Nombre = "Tarta",
                            Precio = 100,
                            Preparacion = "Tarta (preparacion)",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 9,
                            Imagen = "url",
                            Ingredientes = "Fideos con salsa cuatro quesos (ingredientes)",
                            Nombre = "Fideos con salsa cuatro quesos",
                            Precio = 100,
                            Preparacion = "Fideos con salsa cuatro quesos (preparacion)",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 10,
                            Imagen = "url",
                            Ingredientes = "Noquis con Salsa Bolognesa (ingredientes)",
                            Nombre = "Noquis con Salsa Bolognesa",
                            Precio = 100,
                            Preparacion = "Noquis con Salsa Bolognesa (preparacion)",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 11,
                            Imagen = "url",
                            Ingredientes = "Sorrentinos con Salsa Filetto (ingredientes)",
                            Nombre = "Sorrentinos con Salsa Filetto",
                            Precio = 100,
                            Preparacion = "Sorrentinos con Salsa Filetto (preparacion)",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 12,
                            Imagen = "url",
                            Ingredientes = "Provoleta (ingredientes)",
                            Nombre = "Provoleta",
                            Precio = 100,
                            Preparacion = "Provoleta (preparacion)",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 13,
                            Imagen = "url",
                            Ingredientes = "Parrillada para 1 (ingredientes)",
                            Nombre = "Parrillada para 1",
                            Precio = 100,
                            Preparacion = "Parrillada para 1 (preparacion)",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 14,
                            Imagen = "url",
                            Ingredientes = "Parrillada para 2 (ingredientes)",
                            Nombre = "Parrillada para 2",
                            Precio = 100,
                            Preparacion = "Parrillada para 2 (preparacion)",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 15,
                            Imagen = "url",
                            Ingredientes = "Muzzarella (ingredientes)",
                            Nombre = "Muzzarella",
                            Precio = 100,
                            Preparacion = "Muzzarella (preparacion)",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 16,
                            Imagen = "url",
                            Ingredientes = "Napolitana (ingredientes)",
                            Nombre = "Napolitana",
                            Precio = 100,
                            Preparacion = "Napolitana (preparacion)",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 17,
                            Imagen = "url",
                            Ingredientes = "Roquefort (ingredientes)",
                            Nombre = "Roquefort",
                            Precio = 100,
                            Preparacion = "Roquefort (preparacion)",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 18,
                            Imagen = "url",
                            Ingredientes = "Fugazetta Rellena (ingredientes)",
                            Nombre = "Fugazetta Rellena",
                            Precio = 100,
                            Preparacion = "Fugazetta Rellena (preparacion)",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 19,
                            Imagen = "url",
                            Ingredientes = "Hamburguesa (ingredientes)",
                            Nombre = "Hamburguesa",
                            Precio = 100,
                            Preparacion = "Hamburguesa (preparacion)",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 20,
                            Imagen = "url",
                            Ingredientes = "Pollo Cesar (ingredientes)",
                            Nombre = "Pollo Cesar",
                            Precio = 100,
                            Preparacion = "Pollo Cesar (preparacion)",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 21,
                            Imagen = "url",
                            Ingredientes = "Lechuga y Cebolla (ingredientes)",
                            Nombre = "Lechuga y Cebolla",
                            Precio = 100,
                            Preparacion = "Lechuga y Cebolla (preparacion)",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 22,
                            Imagen = "url",
                            Ingredientes = "Agua (ingredientes)",
                            Nombre = "Agua",
                            Precio = 100,
                            Preparacion = "Agua (preparacion)",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 23,
                            Imagen = "url",
                            Ingredientes = "Agua con Gas (ingredientes)",
                            Nombre = "Agua con Gas",
                            Precio = 100,
                            Preparacion = "Agua con Gas (preparacion)",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 24,
                            Imagen = "url",
                            Ingredientes = "CocaCola (ingredientes)",
                            Nombre = "CocaCola",
                            Precio = 100,
                            Preparacion = "CocaCola (preparacion)",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 25,
                            Imagen = "url",
                            Ingredientes = "Agua Tonica (ingredientes)",
                            Nombre = "Agua Tonica",
                            Precio = 100,
                            Preparacion = "Agua Tonica (preparacion)",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 26,
                            Imagen = "url",
                            Ingredientes = "Vino (ingredientes)",
                            Nombre = "Vino",
                            Precio = 100,
                            Preparacion = "Vino (preparacion)",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 27,
                            Imagen = "url",
                            Ingredientes = "Blonde (ingredientes)",
                            Nombre = "Blonde",
                            Precio = 100,
                            Preparacion = "Blonde (preparacion)",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 28,
                            Imagen = "url",
                            Ingredientes = "Honey (ingredientes)",
                            Nombre = "Honey",
                            Precio = 100,
                            Preparacion = "Honey (preparacion)",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 29,
                            Imagen = "url",
                            Ingredientes = "IPA (ingredientes)",
                            Nombre = "IPA",
                            Precio = 100,
                            Preparacion = "IPA (preparacion)",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 30,
                            Imagen = "url",
                            Ingredientes = "Budin de Pan (ingredientes)",
                            Nombre = "Budin de Pan",
                            Precio = 100,
                            Preparacion = "Budin de Pan (preparacion)",
                            TipoMercaderiaId = 10
                        },
                        new
                        {
                            MercaderiaId = 31,
                            Imagen = "url",
                            Ingredientes = "Copa Helada (ingredientes)",
                            Nombre = "Copa Helada",
                            Precio = 100,
                            Preparacion = "Copa Helada (preparacion)",
                            TipoMercaderiaId = 10
                        },
                        new
                        {
                            MercaderiaId = 32,
                            Imagen = "url",
                            Ingredientes = "Panqueques con Dulce de Leche (ingredientes)",
                            Nombre = "Panqueques con Dulce de Leche",
                            Precio = 100,
                            Preparacion = "Panqueques con Dulce de Leche (preparacion)",
                            TipoMercaderiaId = 10
                        },
                        new
                        {
                            MercaderiaId = 33,
                            Imagen = "url",
                            Ingredientes = "Frutilla con Crema (ingredientes)",
                            Nombre = "Frutilla con Crema",
                            Precio = 100,
                            Preparacion = "Frutilla con Crema (preparacion)",
                            TipoMercaderiaId = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoMercaderia", b =>
                {
                    b.Property<int>("TipoMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMercaderiaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMercaderiaId");

                    b.ToTable("TipoMercaderia", (string)null);

                    b.HasData(
                        new
                        {
                            TipoMercaderiaId = 1,
                            Descripcion = "Entrada"
                        },
                        new
                        {
                            TipoMercaderiaId = 2,
                            Descripcion = "Minutas"
                        },
                        new
                        {
                            TipoMercaderiaId = 3,
                            Descripcion = "Pastas"
                        },
                        new
                        {
                            TipoMercaderiaId = 4,
                            Descripcion = "Parrilla"
                        },
                        new
                        {
                            TipoMercaderiaId = 5,
                            Descripcion = "Pizzas"
                        },
                        new
                        {
                            TipoMercaderiaId = 6,
                            Descripcion = "Sandwich"
                        },
                        new
                        {
                            TipoMercaderiaId = 7,
                            Descripcion = "Ensaladas"
                        },
                        new
                        {
                            TipoMercaderiaId = 8,
                            Descripcion = "Bebidas"
                        },
                        new
                        {
                            TipoMercaderiaId = 9,
                            Descripcion = "Cerveza Artesanal"
                        },
                        new
                        {
                            TipoMercaderiaId = 10,
                            Descripcion = "Postres"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Comanda", b =>
                {
                    b.HasOne("Domain.Entities.FormaEntrega", "FormaEntrega")
                        .WithMany("Comandas")
                        .HasForeignKey("FormaEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaEntrega");
                });

            modelBuilder.Entity("Domain.Entities.ComandaMercaderia", b =>
                {
                    b.HasOne("Domain.Entities.Comanda", "Comanda")
                        .WithMany("ComandaMercaderias")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Mercaderia", "Mercaderia")
                        .WithMany("ComandaMercaderias")
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Mercaderia");
                });

            modelBuilder.Entity("Domain.Entities.Mercaderia", b =>
                {
                    b.HasOne("Domain.Entities.TipoMercaderia", "TipoMercaderia")
                        .WithMany("Mercaderias")
                        .HasForeignKey("TipoMercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMercaderia");
                });

            modelBuilder.Entity("Domain.Entities.Comanda", b =>
                {
                    b.Navigation("ComandaMercaderias");
                });

            modelBuilder.Entity("Domain.Entities.FormaEntrega", b =>
                {
                    b.Navigation("Comandas");
                });

            modelBuilder.Entity("Domain.Entities.Mercaderia", b =>
                {
                    b.Navigation("ComandaMercaderias");
                });

            modelBuilder.Entity("Domain.Entities.TipoMercaderia", b =>
                {
                    b.Navigation("Mercaderias");
                });
#pragma warning restore 612, 618
        }
    }
}
